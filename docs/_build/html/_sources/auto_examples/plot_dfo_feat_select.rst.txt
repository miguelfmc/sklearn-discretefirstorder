
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_dfo_feat_select.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_dfo_feat_select.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_dfo_feat_select.py:


================================================
DFO Regressor for Subset Selection in a Pipeline
================================================

Including DFORegressor as part of a sklearn pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 9-20

.. code-block:: default


    import time

    from sklearn.datasets import make_regression
    from sklearn.ensemble import RandomForestRegressor
    from sklearn.model_selection import train_test_split
    from sklearn.feature_selection import SelectFromModel
    from sklearn.pipeline import Pipeline

    from discretefirstorder import DFORegressor








.. GENERATED FROM PYTHON SOURCE LINES 21-25

Creating a synthetic dataset with some uninformative features
===============================================================
We create a synthetic dataset with only 10 informative features.
We keep the true coefficients for comparison with the estimates.

.. GENERATED FROM PYTHON SOURCE LINES 25-39

.. code-block:: default


    X, y, coef = make_regression(
        n_samples=10000,
        n_features=30,
        n_informative=10,
        coef=True,
        bias=5,
        noise=5,
        random_state=11,
    )
    X_train, X_test, y_train, y_test = train_test_split(
        X, y, test_size=0.15, random_state=42
    )








.. GENERATED FROM PYTHON SOURCE LINES 40-46

Fit a RandomForestRegressor directly on the data
================================================
We fit an out-of-the-box scikit-learn RF regressor
on all of the original features of our training dataset
Let's time how long this takes and the score (R² in this case)
on our test dataset.

.. GENERATED FROM PYTHON SOURCE LINES 46-59

.. code-block:: default


    rf = RandomForestRegressor(500, random_state=42)

    t0 = time.perf_counter()
    rf.fit(X_train, y_train)
    delta = time.perf_counter() - t0

    rf_time = delta
    rf_score = rf.score(X_test, y_test)

    print(f"Random Forest fit time: {rf_time:.4f}")
    print(f"Random Forest R² score on test set: {rf_score:.4f}")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Random Forest fit time: 62.4051
    Random Forest R² score on test set: 0.9124




.. GENERATED FROM PYTHON SOURCE LINES 60-64

Use the discrete first-order method for subset selection as part of a Pipeline
==============================================================================
Now we construct a scikit-learn pipeline that includes
that includes a feature selection step based on the DFORegressor.

.. GENERATED FROM PYTHON SOURCE LINES 64-84

.. code-block:: default


    # using a very small selection threshold to select all features with non-zero coefs
    pipeline = Pipeline(
        [
            (
                "selector",
                SelectFromModel(estimator=DFORegressor(k=10), threshold=1e-5),
            ),
            ("rf", RandomForestRegressor(500, random_state=42)),
        ]
    )
    t0 = time.perf_counter()
    pipeline.fit(X_train, y_train)
    delta = time.perf_counter() - t0

    pipeline_time = delta
    pipeline_score = pipeline.score(X_test, y_test)

    print(f"DFO + RF Pipeline fit time: {pipeline_time:.4f}")
    print(f"DFO + RF Pipeline R² score on test set: {pipeline_score:.4f}")




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    DFO + RF Pipeline fit time: 21.5355
    DFO + RF Pipeline R² score on test set: 0.9329





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  24.289 seconds)


.. _sphx_glr_download_auto_examples_plot_dfo_feat_select.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_dfo_feat_select.py <plot_dfo_feat_select.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_dfo_feat_select.ipynb <plot_dfo_feat_select.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
