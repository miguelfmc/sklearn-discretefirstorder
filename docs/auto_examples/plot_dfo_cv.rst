
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_dfo_cv.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_dfo_cv.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_dfo_cv.py:


===================================
Cross Validation with DFO Regressor
===================================

Using CV to find the right number of features to
keep.

.. GENERATED FROM PYTHON SOURCE LINES 10-19

.. code-block:: default


    import numpy as np
    import matplotlib.pyplot as plt

    from sklearn.datasets import make_regression
    from sklearn.model_selection import train_test_split, GridSearchCV

    from discretefirstorder import DFORegressor








.. GENERATED FROM PYTHON SOURCE LINES 20-24

Creating a synthetic dataset with some uninformative features
===============================================================
We create a synthetic dataset with only 10 informative features.
We keep the true coefficients for comparison with the estimates.

.. GENERATED FROM PYTHON SOURCE LINES 24-38

.. code-block:: default


    X, y, coef = make_regression(
        n_samples=10000,
        n_features=30,
        n_informative=10,
        coef=True,
        bias=5,
        noise=5,
        random_state=11,
    )
    X_train, X_test, y_train, y_test = train_test_split(
        X, y, test_size=0.15, random_state=42
    )








.. GENERATED FROM PYTHON SOURCE LINES 39-47

Grid search with k-fold cross validation to find the optimal cardinality parameter
==================================================================================
A priori, we don't know the optimal size of our feature subset.
We can use sweep through a list of possible values and perform
cross validation to select the cardinality parameter that seems
to provide the best fit.
As expected, the best score is achieved with a feature cardinality
of 10, in this case.

.. GENERATED FROM PYTHON SOURCE LINES 47-56

.. code-block:: default


    parameters = {"k": [2, 4, 6, 8, 10, 20, 30]}
    dfo = DFORegressor()
    clf = GridSearchCV(dfo, parameters)
    clf.fit(X_train, y_train)

    print(clf.best_estimator_)
    print(clf.best_score_)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    DFORegressor(k=10)
    0.9988501325091541




.. GENERATED FROM PYTHON SOURCE LINES 57-59

Visualizing the mean CV scores for each value of the hyperparameter
===================================================================

.. GENERATED FROM PYTHON SOURCE LINES 59-72

.. code-block:: default


    param_values = clf.cv_results_["param_k"].data.astype(np.int64)
    mean_test_scores = clf.cv_results_["mean_test_score"]

    fig, ax = plt.subplots(1, 1, figsize=(9, 6))

    ax.plot(param_values, mean_test_scores, "o-")

    ax.set_xlabel("Cardinality parameter $k$ (number of non-zero coefficients)")
    ax.set_ylabel("Mean CV RÂ² score")
    ax.set_title("Cross validation scores vs. DFO cardinality parameter")

    plt.show()



.. image-sg:: /auto_examples/images/sphx_glr_plot_dfo_cv_001.png
   :alt: Cross validation scores vs. DFO cardinality parameter
   :srcset: /auto_examples/images/sphx_glr_plot_dfo_cv_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  7.211 seconds)


.. _sphx_glr_download_auto_examples_plot_dfo_cv.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_dfo_cv.py <plot_dfo_cv.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_dfo_cv.ipynb <plot_dfo_cv.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
